#!/usr/bin/env ruby

# Upload the currently-copied image URL to i.gabebw.com
#
# Options:
#
#   -f local_path: Upload a local file FROM here (if not given, uses copied URL)
#   -t remote_name: Upload the file TO here, with this name.
#
# USAGE:
#
# Upload the image whose URL I just copied and keep the same name:
#
#   icopy
#
# Upload a local image named `from.jpg` and upload as `to.jpg`
#
#   icopy -f flip.jpg -t to.jpg
#
# Upload the copied image URL and upload as flip.{jpg,png,gif,etc}
#
#   icopy -t flip

require "optparse"

from = nil
to = nil

OptionParser.new do |opts|
  opts.banner = <<USAGE
Usage: icopy [-f local-name.gif] [-t remote-name.gif]

Options:

  -f local_path: Upload a local file FROM here (if not given, uses copied URL)
  -t remote_name: Upload the file TO here, with this name.
USAGE

  opts.on("-fFROM", "what to copy from") do |from_value|
    from = from_value
  end

  opts.on("-tTO", "what to copy to") do |to_value|
    to = to_value
  end

  opts.on("-h", "--help", "Prints this help") do
    puts opts
    exit 0
  end
end.parse!

if from
  to ||= File.basename(from)
  STDERR.puts "#{from} -> #{to}"
  `upload-image "#{from}" "#{to}"`
else
  # Try getting a URL from the clipboard
  from = `pbpaste`
  unless from.start_with?("http")
    STDERR.puts "Error: Looks like you didn't copy a URL"
    STDERR.puts "Found: #{from}"
    exit 1
  end

  if from.nil? || from.strip == ""
    STDERR.puts "Error: -f parameter is required, or copy a URL"
    exit 1
  end

  to ||= File.basename(from)

  unless to.include?(".")
    # Guess the extension
    extension = File.extname(from)
    if extension == ""
      puts "Couldn't guess extension, and none provided"
      exit 1
    end
    to += extension
  end

  STDERR.puts "#{from} -> #{to}"
  `curl -Lso image "#{from}"`
  `upload-image "image" "#{to}"`
  `rm image`
end
