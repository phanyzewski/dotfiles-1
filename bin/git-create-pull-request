#!/bin/sh

# Open a PR, edit the description in Vim, copy the url to the clipboard, and
# open the PR in the browser.

set -e
set -o pipefail

on_master() {
  [ "$(git rev-parse HEAD)" = "$(git rev-parse master)" ]
}

error() {
  echo "\n!!! $@" >&2
  exit 1
}

if on_master; then
  error "You're already on master"
fi

commit_message_file=$(mktemp -t commit_message_file)
number_of_commits=$(git rev-list master..HEAD --count)
commentchar=$(git config --get core.commentchar || printf "#")

if [ "$number_of_commits" -eq 1 ]; then
  git log -1 --format=%B > "$commit_message_file"
  if [ -r PULL_REQUEST_TEMPLATE ]; then
    cat PULL_REQUEST_TEMPLATE >> "$commit_message_file"
  fi
else
  echo "[Descriptive title goes here]" > "$commit_message_file"
  echo >> "$commit_message_file"
  if [ -r PULL_REQUEST_TEMPLATE ]; then
    cat PULL_REQUEST_TEMPLATE >> "$commit_message_file"
  fi
  git log --format="$commentchar %h (%aN, %ar)%n%w(78,3,3)%s%n%+b" master..HEAD >> "$commit_message_file"
fi

vim -c "set ft=gitcommit" "$commit_message_file"
message_without_comments=$(egrep -v "^${commentchar}" "$commit_message_file")

if hub pull-request -m "$message_without_comments" | pbcopy; then
  open "$(pbpaste)"
fi
