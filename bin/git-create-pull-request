#!/bin/sh

# Open a PR, edit the description in Vim, copy the url to the clipboard, and
# open the PR in the browser.

set -e
set -o pipefail

inreplace(){
  local file=$1
  local needle=$2
  local replacement=$3

  if grep -Fq "$needle" "$file"; then
    sed -i '' "s/$needle/$replacement/g" "$file"
  fi
}

on_master() {
  [ "$(git rev-parse HEAD)" = "$(git rev-parse master)" ]
}

error() {
  echo "\n!!! $@" >&2
  exit 1
}

if on_master; then
  error "You're already on master"
fi

find_pull_request_template(){
  for template in PULL_REQUEST_TEMPLATE* .github/PULL_REQUEST_TEMPLATE*; do
    if [ -r "$template" ]; then
      printf "$template"
      break
    fi
  done
}

hired_ticket_number(){
  git rev-parse --abbrev-ref HEAD | sed -E 's/gbw-([A-Z]+-[0-9]+).*/\1/'
}

commit_message_file=$(mktemp -t commit_message_file)
number_of_commits=$(git rev-list origin/master..HEAD --count)
commentchar=$(git config --get core.commentchar || printf "#")
pull_request_template=$(find_pull_request_template)

if [ "$number_of_commits" -eq 1 ]; then
  git log -1 --format=%B > "$commit_message_file"
  if [ -n "$pull_request_template" ]; then
    cat "$pull_request_template" >> "$commit_message_file"
  fi
else
  echo "[Descriptive title goes here]" > "$commit_message_file"
  echo >> "$commit_message_file"
  if [ -n "$pull_request_template" ]; then
    cat "$pull_request_template" >> "$commit_message_file"
  fi
  echo >> "$commit_message_file"
  git log --format="$commentchar %h (%aN, %ar)%n%w(78,3,3)%s%n%+b" origin/master..HEAD >> "$commit_message_file"
fi

# Hired
inreplace "$commit_message_file" insert_jira_issue_number "$(hired_ticket_number)"
inreplace "$commit_message_file" insert_github_name_or_group @kevindjacobson

vim -c "set ft=gitcommit" "$commit_message_file"
message_without_comments=$(egrep -v "^${commentchar}" "$commit_message_file")

if hub pull-request -m "$message_without_comments" | pbcopy; then
  open "$(pbpaste)"
fi
